{"version":3,"sources":["vista/Casillas.js","vista/Sensores.js","logica/exploracion.js","vista/Pantalla.js","logica/calculosentorno.js","App.js","index.js"],"names":["Casillas","tablero","map","casilla","href","className","style","width","height","position","backgroundColor","isAgente","meta","obs","visitado","id","x","y","Sensores","s1","s2","s3","s4","s5","s6","s7","s8","top","right","color","evaluarS1","agente_p","ax","ay","s1x","s1y","casillaS1","find","element","evaluarS2","casillaS2","evaluarS3","casillaS3","evaluarS4","casillaS4","evaluarS5","casillaS5","evaluarS6","casillaS6","evaluarS7","casillaS7","evaluarS8","casillaS8","Pantalla","props","state","obstac","pathlist","stop","index","sleep","bind","llenartablero","definirobs","definirmeta","objetivocambio","metacambio","caminarnorte","caminarsur","caminareste","caminaroeste","rules","viewupdate","start","a","this","loopstop","explorarentorno","objetivo","onClick","type","value","onChange","placeholder","length","display","gridTemplateColumns","gridAutoRows","arr","i","j","push","crearentorno","setState","ajuste","parseInt","elementsCoord","findIndex","colorearobstaculo","colorearmeta","estadoS1","estadoS2","estadoS3","estadoS4","estadoS5","estadoS6","estadoS7","estadoS8","e","target","updatepath","movimiento","console","log","milliseconds","Promise","resolve","setTimeout","backmove","backlist","minus","at","recalcular","cleanAgente","colorearagente","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81359d82.chunk.js","sourcesContent":["\r\nconst Casillas =({tablero})=>{        \r\n    return(<>\r\n        {tablero.map?.((casilla)=>(            \r\n            <div key={casilla.id}> \r\n                <button href=\"#\" className=\"casilla\"\r\n                    style={{\r\n                        width:'50px',\r\n                        height:'50px',\r\n                        position: 'relative',\r\n                        backgroundColor:  casilla.isAgente === true ? 'green' : \r\n                                        casilla.meta     === true ? 'midnightblue' : \r\n                                        casilla.obs      === true ? 'red' : \r\n                                        casilla.visitado === true ? 'plum' : 'white' \r\n                    }}> {casilla.id+' x:'+casilla.x+', y:'+casilla.y}\r\n                </button>\r\n            </div>\r\n            ))\r\n        }\r\n    </>)\r\n    \r\n}\r\n\r\nexport default Casillas","\r\nconst Sensores =({s1,s2,s3,s4,s5,s6,s7,s8})=>{\r\n    return(\r\n        <>\r\n            <div style={{position:'fixed',top:'80%',right:'10%', width:'10px', height:'10px', color: s1==='obst' ? 'red' : s1==='meta' ? 'green' : s1==='visi' ? 'pink': 'blue'}}>s1</div>\r\n            \r\n            <div style={{position:'fixed',top:'80%',right:'7%', width:'10px', height:'10px', color: s2==='obst' ? 'red' : s2==='meta' ? 'green' : s2==='visi' ? 'pink': 'blue'}}>s2</div>\r\n            \r\n            <div style={{position:'fixed',top:'80%',right:'4%', width:'10px', height:'10px', color: s3==='obst' ? 'red' : s3==='meta' ? 'green' : s3==='visi' ? 'pink': 'blue'}}>s3</div>\r\n\r\n            <div style={{position:'fixed',top:'85%',right:'10%', width:'10px', height:'10px', color: s8==='obst' ? 'red' : s8==='meta' ? 'green' : s8==='visi' ? 'pink': 'blue'}}>s8</div>\r\n            \r\n            <div style={{position:'fixed',top:'85%',right:'4%',width:'10px', height:'10px', color: s4==='obst' ? 'red' : s4==='meta' ? 'green' : s4==='visi' ? 'pink': 'blue'}}>s4</div>\r\n\r\n            <div style={{position:'fixed',top:'90%',right:'10%', width:'10px', height:'10px', color: s7==='obst' ? 'red' : s7==='meta' ? 'green' : s7==='visi' ? 'pink': 'blue'}}>s7</div>\r\n\r\n            <div style={{position:'fixed',top:'90%',right:'7%', width:'10px', height:'10px', color: s6==='obst' ? 'red' : s6==='meta' ? 'green' : s6==='visi' ? 'pink': 'blue'}}>s6</div>\r\n            \r\n            <div style={{position:'fixed',top:'90%',right:'4%', width:'10px', height:'10px', color: s5==='obst' ? 'red' : s5==='meta' ? 'green' : s5==='visi' ? 'pink': 'blue'}}>s5</div>\r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Sensores","export const evaluarS1 = ({agente_p,tablero}) =>{    \r\n    const ax = agente_p.x\r\n    const ay = agente_p.y\r\n            \r\n    let s1x = ax\r\n    let s1y = ay\r\n    s1x--\r\n    s1y++\r\n    \r\n    const casillaS1 = tablero.find(element => element.x===s1x && element.y===s1y)\r\n    var state = ''\r\n    if(casillaS1?.meta === true){\r\n        state = 'meta'\r\n        return state\r\n    }\r\n    if(casillaS1?.obs === true){\r\n        state = 'obst'\r\n        return state\r\n    }\r\n    if(casillaS1?.visitado === true){\r\n        state = 'visi'\r\n        return state\r\n    }\r\n    else{\r\n        state = 'vaci'\r\n        return state\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const evaluarS2 = ({agente_p,tablero}) =>{    \r\n    const ax = agente_p.x\r\n    const ay = agente_p.y\r\n            \r\n    let s1x = ax\r\n    let s1y = ay    \r\n    s1y++\r\n    \r\n    const casillaS2 = tablero.find(element => element.x===s1x && element.y===s1y)\r\n    var state = ''\r\n    if(casillaS2?.meta === true){\r\n        state = 'meta'\r\n        return state\r\n    }\r\n    if(casillaS2?.obs === true){\r\n        state = 'obst'\r\n        return state\r\n    }\r\n    if(casillaS2?.visitado === true){\r\n        state = 'visi'\r\n        return state\r\n    }\r\n    else{\r\n        state = 'vaci'\r\n        return state\r\n    }\r\n}\r\n\r\n\r\nexport const evaluarS3 = ({agente_p,tablero}) =>{    \r\n    const ax = agente_p.x\r\n    const ay = agente_p.y\r\n            \r\n    let s1x = ax\r\n    let s1y = ay    \r\n    s1x++\r\n    s1y++\r\n    \r\n    const casillaS3 = tablero.find(element => element.x===s1x && element.y===s1y)\r\n    var state = ''\r\n    if(casillaS3?.meta === true){\r\n        state = 'meta'\r\n        return state\r\n    }\r\n    if(casillaS3?.obs === true){\r\n        state = 'obst'\r\n        return state\r\n    }\r\n    if(casillaS3?.visitado === true){\r\n        state = 'visi'\r\n        return state\r\n    }\r\n    else{\r\n        state = 'vaci'\r\n        return state\r\n    }\r\n}\r\n\r\nexport const evaluarS4 = ({agente_p,tablero}) =>{    \r\n    const ax = agente_p.x\r\n    const ay = agente_p.y\r\n            \r\n    let s1x = ax\r\n    let s1y = ay    \r\n    s1x++    \r\n    \r\n    const casillaS4 = tablero.find(element => element.x===s1x && element.y===s1y)\r\n    var state = ''\r\n    if(casillaS4?.meta === true){\r\n        state = 'meta'\r\n        return state\r\n    }\r\n    if(casillaS4?.obs === true){\r\n        state = 'obst'\r\n        return state\r\n    }\r\n    if(casillaS4?.visitado === true){\r\n        state = 'visi'\r\n        return state\r\n    }\r\n    else{\r\n        state = 'vaci'\r\n        return state\r\n    }\r\n}\r\n\r\nexport const evaluarS5 = ({agente_p,tablero}) =>{    \r\n    const ax = agente_p.x\r\n    const ay = agente_p.y\r\n            \r\n    let s1x = ax\r\n    let s1y = ay    \r\n    s1x++\r\n    s1y--\r\n    \r\n    const casillaS5 = tablero.find(element => element.x===s1x && element.y===s1y)\r\n    var state = ''\r\n    if(casillaS5?.meta === true){\r\n        state = 'meta'\r\n        return state\r\n    }\r\n    if(casillaS5?.obs === true){\r\n        state = 'obst'\r\n        return state\r\n    }\r\n    if(casillaS5?.visitado === true){\r\n        state = 'visi'\r\n        return state\r\n    }\r\n    else{\r\n        state = 'vaci'\r\n        return state\r\n    }\r\n}\r\n\r\nexport const evaluarS6 = ({agente_p,tablero}) =>{    \r\n    const ax = agente_p.x\r\n    const ay = agente_p.y\r\n            \r\n    let s1x = ax\r\n    let s1y = ay        \r\n    s1y--\r\n    \r\n    const casillaS6 = tablero.find(element => element.x===s1x && element.y===s1y)\r\n    var state = ''\r\n    if(casillaS6?.meta === true){\r\n        state = 'meta'\r\n        return state\r\n    }\r\n    if(casillaS6?.obs === true){\r\n        state = 'obst'\r\n        return state\r\n    }\r\n    if(casillaS6?.visitado === true){\r\n        state = 'visi'\r\n        return state\r\n    }\r\n    else{\r\n        state = 'vaci'\r\n        return state\r\n    }\r\n}\r\n\r\nexport const evaluarS7 = ({agente_p,tablero}) =>{    \r\n    const ax = agente_p.x\r\n    const ay = agente_p.y\r\n            \r\n    let s1x = ax\r\n    let s1y = ay    \r\n    s1x--\r\n    s1y--\r\n\r\n    const casillaS7 = tablero.find(element => element.x===s1x && element.y===s1y)    \r\n    var state = ''\r\n    if(casillaS7?.meta === true){\r\n        state = 'meta'\r\n        return state\r\n    }\r\n    if(casillaS7?.obs === true){\r\n        state = 'obst'\r\n        return state\r\n    }\r\n    if(casillaS7?.visitado === true){\r\n        state = 'visi'\r\n        return state\r\n    }\r\n    else{\r\n        state = 'vaci'\r\n        return state\r\n    }\r\n}\r\n\r\nexport const evaluarS8 = ({agente_p,tablero}) =>{    \r\n    const ax = agente_p.x\r\n    const ay = agente_p.y\r\n            \r\n    let s1x = ax\r\n    let s1y = ay    \r\n    s1x--    \r\n    \r\n    const casillaS8 = tablero.find(element => element.x===s1x && element.y===s1y)\r\n    var state = ''\r\n    if(casillaS8?.meta === true){\r\n        state = 'meta'\r\n        return state\r\n    }\r\n    if(casillaS8?.obs === true){\r\n        state = 'obst'\r\n        return state\r\n    }\r\n    if(casillaS8?.visitado === true){\r\n        state = 'visi'\r\n        return state\r\n    }\r\n    else{\r\n        state = 'vaci'\r\n        return state\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Casillas from './Casillas'\r\nimport Sensores from './Sensores'\r\n\r\nimport './Styles.css'\r\nimport { evaluarS1, evaluarS2, evaluarS3,evaluarS4,evaluarS5,evaluarS6,evaluarS7,evaluarS8} from '../logica/exploracion'\r\nimport { colorearagente, colorearcamino, colorearmeta, colorearobstaculo, crearentorno, crearmuros } from '../logica/calculosentorno'\r\n\r\nexport default class Pantalla extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            //sensores\r\n            s1: '', s2: '', s3: '', s4: '', s5: '', s6: '', s7: '', s8: '',\r\n\r\n            tablero: [],//configura el tablero o entorno\r\n            agente_p: { x: 1, y: 1 },//posición de nuestro agente, por defecto en 1,1\r\n            obstac: '',//dónde poner el obstáculo #de casilla \r\n            meta: '',//dónde poner la meta #de casilla     \r\n\r\n            pathlist: [],\r\n            stop: false,\r\n            index: -2\r\n        }\r\n        this.sleep = this.sleep.bind(this)\r\n\r\n        this.llenartablero = this.llenartablero.bind(this)\r\n\r\n        this.definirobs = this.definirobs.bind(this)\r\n        this.definirmeta = this.definirmeta.bind(this)\r\n\r\n\r\n        this.objetivocambio = this.objetivocambio.bind(this)\r\n        this.metacambio = this.metacambio.bind(this)\r\n\r\n        this.caminarnorte = this.caminarnorte.bind(this)\r\n        this.caminarsur = this.caminarsur.bind(this)\r\n        this.caminareste = this.caminareste.bind(this)\r\n        this.caminaroeste = this.caminaroeste.bind(this)\r\n\r\n        this.rules = this.rules.bind(this)\r\n        this.viewupdate = this.viewupdate.bind(this)\r\n\r\n        this.start = this.start.bind(this)\r\n\r\n    }\r\n\r\n\r\n    async start() {\r\n        const { stop } = this.state\r\n        let loopstop = stop        //INITIAL STATE\r\n\r\n        while (loopstop === false) {\r\n            //CAMBIA LA POSICIÓN DEL AGENTE\r\n\r\n            this.explorarentorno()\r\n\r\n            await this.sleep(100)\r\n            this.rules()\r\n\r\n            ////////////////////////////////////////////////////////////////////////\r\n            //UPDATES THE VIEW, VISUAL STUFF\r\n\r\n            await this.sleep(110)\r\n            this.viewupdate()\r\n\r\n            const { stop } = this.state\r\n            loopstop = stop //UPDATES THE STOP STATE\r\n        }\r\n\r\n        //}\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            tablero,\r\n            objetivo,\r\n            meta,\r\n            s1, s2, s3, s4, s5, s6, s7, s8\r\n        } = this.state\r\n\r\n\r\n\r\n\r\n        return (\r\n            <>\r\n                <button\r\n                    onClick={this.llenartablero}\r\n                    style={{ position: 'fixed', top: '10%', right: '2%' }}\r\n                >llenar tablero</button>\r\n                <input type='number' style={{ position: 'fixed', top: '17%', right: '2%' }} value={objetivo} onChange={this.objetivocambio} placeholder='insertar obstáculo # de casilla' />\r\n                <button\r\n                    onClick={this.definirobs}\r\n                    style={{ position: 'fixed', top: '21%', right: '2%' }}\r\n                >colocar obs</button>\r\n                <input type='number' style={{ position: 'fixed', top: '27%', right: '2%' }} value={meta} onChange={this.metacambio} placeholder='definir meta # casilla' />\r\n                <button\r\n                    onClick={this.definirmeta}\r\n                    style={{ position: 'fixed', top: '31%', right: '2%' }}\r\n                >colocar meta</button>\r\n                {/*<button \r\n                    onClick={this.crearmuralla}\r\n                    style={{position:'fixed',top:'41%',right:'2%'}}\r\n                >crear muralla</button>\r\n\r\n                <button \r\n                    onClick={this.caminarnorte}\r\n                    style={{position:'fixed',top:'48%',right:'6%'}}\r\n                >ir norte</button>                \r\n                <button \r\n                    onClick={this.caminarsur}\r\n                    style={{position:'fixed',top:'61%',right:'6%'}}\r\n                >ir sur</button>           \r\n                <button \r\n                    onClick={this.caminareste}\r\n                    style={{position:'fixed',top:'54%',right:'2%'}}\r\n                >ir este</button>           \r\n                <button \r\n                    onClick={this.caminaroeste}\r\n                    style={{position:'fixed',top:'54%',right:'10%'}}\r\n                >ir oeste</button>     */}\r\n\r\n                <button\r\n                    onClick={this.start}\r\n                    style={{ position: 'fixed', top: '70%', right: '2%' }}\r\n                >ir a meta</button>\r\n\r\n\r\n                {\r\n                    tablero.length > 0 &&\r\n                    <>\r\n                        <div\r\n                            style={{\r\n                                width: '1000px',\r\n                                display: 'grid',\r\n                                gridTemplateColumns: 'repeat(20, 1fr)',\r\n                                gridAutoRows: '20',\r\n                            }}\r\n                        >\r\n                            <Casillas tablero={tablero} />\r\n                        </div>\r\n                        <Sensores\r\n                            s1={s1}\r\n                            s2={s2}\r\n                            s3={s3}\r\n                            s4={s4}\r\n                            s5={s5}\r\n                            s6={s6}\r\n                            s7={s7}\r\n                            s8={s8}\r\n                        />\r\n                    </>}\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    llenartablero() {\r\n        const { agente_p } = this.state\r\n        const arr = crearentorno({ agente_p })\r\n        this.setState({ tablero: arr, stop: false, agente_p: { x: 1, y: 1 }, index: -2 });\r\n        //console.log('Antes de pintar agente');\r\n        //this.paintAgente(agente_p,arr)\r\n    }\r\n\r\n    definirobs() {\r\n        const { tablero, obstac } = this.state\r\n        const ajuste = colorearobstaculo({ tablero, obstac })\r\n        this.setState({ tablero: ajuste })\r\n    }\r\n\r\n    definirmeta() {\r\n        const { tablero, meta } = this.state\r\n        const ajuste = colorearmeta({ tablero, meta })\r\n        this.setState({ tablero: ajuste })\r\n    }\r\n\r\n\r\n    async explorarentorno() {\r\n        const { agente_p, tablero } = this.state\r\n\r\n        //Evaluar todas las casillas, para saber si hay obstáculo\r\n        const estadoS1 = evaluarS1({ agente_p, tablero })\r\n        const estadoS2 = evaluarS2({ agente_p, tablero })\r\n        const estadoS3 = evaluarS3({ agente_p, tablero })\r\n        const estadoS4 = evaluarS4({ agente_p, tablero })\r\n        const estadoS5 = evaluarS5({ agente_p, tablero })\r\n        const estadoS6 = evaluarS6({ agente_p, tablero })\r\n        const estadoS7 = evaluarS7({ agente_p, tablero })\r\n        const estadoS8 = evaluarS8({ agente_p, tablero })\r\n\r\n        this.setState({\r\n            s1: estadoS1,\r\n            s2: estadoS2,\r\n            s3: estadoS3,\r\n            s4: estadoS4,\r\n            s5: estadoS5,\r\n            s6: estadoS6,\r\n            s7: estadoS7,\r\n            s8: estadoS8\r\n        })\r\n        //const entorno = {s1:estadoS1, s2:estadoS2, s3:estadoS3, s4:estadoS4, s5:estadoS5, s6:estadoS6, s7:estadoS7, s8:estadoS8}\r\n        //return entorno\r\n    }\r\n\r\n    objetivocambio(e) {\r\n        const { value } = e.target\r\n        this.setState({ obstac: value })\r\n    }\r\n\r\n    metacambio(e) {\r\n        const { value } = e.target\r\n        this.setState({ meta: value, stop: false })\r\n    }\r\n\r\n    caminarnorte() {\r\n        const { agente_p, pathlist } = this.state\r\n        let updatepath = pathlist\r\n        let movimiento = agente_p\r\n        movimiento.y++\r\n        updatepath.push({ x: movimiento.x, y: movimiento.y })\r\n\r\n        this.setState({ agente_p: movimiento, pathlist: updatepath, index: -2 })\r\n        console.log(pathlist)\r\n    }\r\n\r\n    caminarsur() {\r\n        const { agente_p, pathlist } = this.state\r\n        let updatepath = pathlist\r\n        let movimiento = agente_p\r\n        movimiento.y--\r\n        updatepath.push({ x: movimiento.x, y: movimiento.y })\r\n        this.setState({ agente_p: movimiento, pathlist: updatepath, index: -2 })\r\n        console.log(pathlist)\r\n    }\r\n\r\n    caminareste() {\r\n        const { agente_p, pathlist } = this.state\r\n        let updatepath = pathlist\r\n        let movimiento = agente_p\r\n        movimiento.x++\r\n        updatepath.push({ x: movimiento.x, y: movimiento.y })\r\n        this.setState({ agente_p: movimiento, pathlist: updatepath, index: -2 })\r\n        console.log(pathlist)\r\n    }\r\n\r\n    caminaroeste() {\r\n        const { agente_p, pathlist } = this.state\r\n        let updatepath = pathlist\r\n        let movimiento = agente_p\r\n        movimiento.x--\r\n        updatepath.push({ x: movimiento.x, y: movimiento.y })\r\n        this.setState({ agente_p: movimiento, pathlist: updatepath, index: -2 })\r\n        console.log(pathlist)\r\n    }\r\n\r\n\r\n    sleep(milliseconds) {\r\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n    }\r\n\r\n\r\n\r\n    rules() {\r\n        const { s1, s2, s3, s4, s5, s6, s7, s8 } = this.state\r\n\r\n        let backmove = []\r\n        let backlist = []\r\n        let movimiento = []\r\n        if ((s1 === 'visi' || s1 === 'obst') && (s2 === 'visi' || s2 === 'obst') && (s3 === 'visi' || s3 === 'obst') && (s4 === 'visi' || s4 === 'obst') && (s5 === 'visi' || s5 === 'obst') && (s6 === 'visi' || s6 === 'obst') && (s7 === 'visi' || s7 === 'obst') && (s8 === 'visi' || s8 === 'obst')) {\r\n            const { agente_p, pathlist, index } = this.state\r\n            let minus = index\r\n            movimiento = agente_p //COPY OF THE AGENT POSITION {x:n, y:n}\r\n            //console.log('Movimiento ',movimiento)\r\n            backlist = pathlist //LISTA ENTERA DE PASOS ANTERIORES\r\n            backmove = pathlist.at(minus)  //X ITEM DE LA LISTA, anteriormente visitado\r\n            //console.log('Backmove ',backmove) \r\n            //cosole.log(pathlist)\r\n            movimiento.x = backmove.x\r\n            movimiento.y = backmove.y\r\n            backlist.push(agente_p)\r\n            //console.log(pathlist)\r\n            minus = minus - 2\r\n            //console.log('minus -2 =',minus)\r\n            //console.log(minus)\r\n            this.setState({ agente_p: movimiento, index: minus, pathlist: backlist })\r\n        }\r\n\r\n\r\n        //IF \"META\" IS NEARBY, MOVES TO THE PLACE IT IS///////////////////////////////////////////////////\r\n        //IF IT IS AT NORTH\r\n        if (s2 === 'meta') {\r\n            this.caminarnorte()\r\n            this.setState({ stop: true })\r\n            return\r\n        }\r\n        //IF IT IS AT EAST\r\n        if (s4 === 'meta') {\r\n            this.caminareste()\r\n            this.setState({ stop: true })\r\n            return\r\n        }\r\n        //IF IT IS AT SOUTH\r\n        if (s6 === 'meta') {\r\n            this.caminarsur()\r\n            this.setState({ stop: true })\r\n            return\r\n        }\r\n        //IF IT IS AT WEST\r\n        if (s8 === 'meta') {\r\n            this.caminaroeste()\r\n            this.setState({ stop: true })\r\n            return\r\n        }\r\n\r\n\r\n        //META NEARBY, AT CORNERS\r\n        //IF NW AND N IS CLEAR\r\n        if (s1 === 'meta' && s2 === 'vaci') {\r\n            this.caminarnorte()\r\n            return\r\n        }\r\n        //IF NW AND W IS CLEAR (AND N WASN'T)\r\n        if (s1 === 'meta' && s8 === 'vaci') {\r\n            this.caminaroeste()\r\n            return\r\n        }\r\n        //IF NE AND N IS CLEAR\r\n        if (s3 === 'meta' && s2 === 'vaci') {\r\n            this.caminarnorte()\r\n            return\r\n        }\r\n        //IF NE AND E IS CLEAR (AND N WASN'T)\r\n        if (s3 === 'meta' && s4 === 'vaci') {\r\n            this.caminareste()\r\n            return\r\n        }\r\n        //IF SE AND E IS CLEAR\r\n        if (s5 === 'meta' && s4 === 'vaci') {\r\n            this.caminareste()\r\n            return\r\n        }\r\n        //IF SE AND S IS CLEAR (AND E WASN'T)\r\n        if (s5 === 'meta' && s6 === 'vaci') {\r\n            this.caminarsur()\r\n            return\r\n        }\r\n        //IF SW AND W IS CLEAR\r\n        if (s7 === 'meta' && s8 === 'vaci') {\r\n            this.caminaroeste()\r\n            return\r\n        }\r\n        //IF SW AND S IS CLEAR (AND W WASN'T)\r\n        if (s7 === 'meta' && s6 === 'vaci') {\r\n            this.caminaroeste()\r\n            return\r\n        }\r\n\r\n\r\n        if (s2 === 'vaci') {\r\n            this.caminarnorte()\r\n            return\r\n        }\r\n        if (s6 === 'vaci') {\r\n            this.caminarsur()\r\n            return\r\n        }\r\n        if (s8 === 'vaci') {\r\n            this.caminaroeste()\r\n            return\r\n        }\r\n        if (s4 === 'vaci') {\r\n            this.caminareste()\r\n            return\r\n        }\r\n\r\n\r\n\r\n        ////////////////////////////////////////////PATHS AT THE CORNERS///////////////////////////////////////////////\r\n        //WHEN S1 IS CLEAR TO WALK/////////////////////////\r\n        if (s1 === 'vaci' && s2 !== 'obst') {\r\n            this.caminarnorte()\r\n            return\r\n        }\r\n        //ONLY IF N WASN'T CLEAR\r\n        if (s1 === 'vaci' && s8 !== 'obst') {\r\n            this.caminaroeste()\r\n            return\r\n        }\r\n\r\n        //WHEN S3 IS CLEAR TO WALK/////////////////////////\r\n        if (s3 === 'vaci' && s2 !== 'obst') {\r\n            this.caminarnorte()\r\n            return\r\n        }\r\n        //ONLY IF N WASN'T CLEAR\r\n        if (s3 === 'vaci' && s4 !== 'obst') {\r\n            this.caminareste()\r\n            return\r\n        }\r\n\r\n        //WHEN S5 IS CLEAR TO WALK/////////////////////////\r\n        if (s5 === 'vaci' && s4 !== 'obst') {\r\n            this.caminareste()\r\n            return\r\n        }\r\n        //ONLY IF N WASN'T CLEAR\r\n        if (s5 === 'vaci' && s6 !== 'obst') {\r\n            this.caminarsur()\r\n            return\r\n        }\r\n\r\n        //WHEN S7 IS CLEAR TO WALK/////////////////////////\r\n        if (s7 === 'vaci' && s8 !== 'obst') {\r\n            this.caminaroeste()\r\n            return\r\n        }\r\n        //ONLY IF N WASN'T CLEAR\r\n        if (s7 === 'vaci' && s6 !== 'obst') {\r\n            this.caminarsur()\r\n            return\r\n        }\r\n\r\n    }\r\n\r\n    viewupdate() {\r\n        const { agente_p, tablero } = this.state//collects position of the agent            \r\n        //RECALCULAR CASILLAS VISITADAS Y COLOREAR POS ACTUAL DEL AGENTE\r\n        const recalcular = colorearagente({ agente_p, tablero }) //Updates the enviroment string\r\n        //ACTUALIZAR ENTORNO\r\n        this.setState({ tablero: recalcular }) //Sets the enviroment string into the new state\r\n\r\n\r\n        //console.log(pathlist)//PRINTS LAST VISITED                        \r\n    }\r\n\r\n}","\r\n//FILL ARRAY THAT REPRESENTS TH ENVIROMENT INCLUDES THE DEFAULT OBSTACLES ON 0X 0Y AND MAX X Y\r\nexport const crearentorno = () => {\r\n    const x = 1\r\n    const y = 1\r\n    let arr = [];\r\n    var id = 400;\r\n    for(let i=19;i>=0;i--){\r\n        id=id-20;\r\n        for(let j=0;j<20;j++){\r\n            if(j === x && i === y){\r\n                arr.push({'id':id,'x':j,'y':i,'obs':false,'meta':false,'visitado':false,'isAgente': true});\r\n                id++;\r\n            }\r\n            else if(j === 0 || i === 0 || j ===19 || i === 19){\r\n                arr.push({'id':id,'x':j,'y':i,'obs':true,'meta':false,'visitado':false,'isAgente': false});\r\n                id++;\r\n            }\r\n            else{\r\n                arr.push({'id':id,'x':j,'y':i,'obs':false,'meta':false,'visitado':false,'isAgente': false});\r\n                id++;\r\n            }            \r\n        }\r\n        id=id-20;            \r\n    }    \r\n    return(arr)\r\n}\r\n\r\n\r\n\r\n//TAKES THE POSITION OF THE AGENT AND PRINTS IT INSIDE THE ENVIROMENT ARRAY\r\nexport const colorearagente = ({agente_p,tablero}) => {\r\n    let ax = agente_p.x\r\n    let ay = agente_p.y\r\n    let cleanAgente = []\r\n    cleanAgente = tablero\r\n    for(let i=0; i<=399; i++){\r\n        if(cleanAgente[i].isAgente === true){\r\n            cleanAgente[i].isAgente = false\r\n            cleanAgente[i].visitado = true\r\n        }\r\n        else if(cleanAgente[i].x === ax && cleanAgente[i].y === ay){\r\n            cleanAgente[i].isAgente = true\r\n        }\r\n    }\r\n    const updatedTable = cleanAgente\r\n    \r\n    return(updatedTable)\r\n}\r\n\r\n//USED TO SET THE PLACE WHERE THE GOAL IS\r\nexport const colorearmeta = ({tablero, meta}) =>{\r\n    const casilla = parseInt(meta)\r\n    let ajuste = []\r\n    ajuste = tablero\r\n    for(let i=0; i<=399; i++){\r\n        if(ajuste[i].id===casilla){\r\n            ajuste[i].meta = true            \r\n        }\r\n        else{\r\n            ajuste[i].meta = false\r\n        }\r\n    }\r\n    return(ajuste)\r\n}\r\n\r\n\r\n\r\n\r\n//INSERTS AND OBSTACLE\r\nexport const colorearobstaculo = ({tablero, obstac}) =>{\r\n    const casilla = parseInt(obstac)\r\n    \r\n    //obtenemos la casilla donde está posicionado el ajente\r\n    const elementsCoord = tablero.findIndex(element => element.id === casilla)\r\n    //creamos copia del tablero\r\n    let ajuste = [...tablero]\r\n    //actualizamos tablero con valor visitado true a la casilla donde se encontró el agente\r\n    ajuste[elementsCoord] = {...ajuste[elementsCoord], obs: true}\r\n    return(ajuste)\r\n}\r\n\r\n\r\n","import Pantalla from \"./vista/Pantalla\";\n\nfunction App() {\n  return (\n    <Pantalla />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}