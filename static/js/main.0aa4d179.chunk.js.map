{"version":3,"sources":["vista/Casillas.js","vista/Sensores.js","logica/exploracion.js","vista/Pantalla.js","logica/calculosentorno.js","App.js","index.js"],"names":["Casillas","tablero","map","casilla","href","className","style","width","height","position","backgroundColor","isAgente","meta","obs","visitado","id","x","y","Sensores","s1","s2","s3","s4","s5","s6","s7","s8","top","right","color","evaluarS1","agente_p","ax","ay","s1x","s1y","casillaS1","find","element","evaluarS2","casillaS2","evaluarS3","casillaS3","evaluarS4","casillaS4","evaluarS5","casillaS5","evaluarS6","casillaS6","evaluarS7","casillaS7","evaluarS8","casillaS8","Pantalla","props","state","obstac","pathlist","stop","index","rendimiento","sleep","bind","llenartablero","definirobs","definirmeta","objetivocambio","metacambio","caminarnorte","caminarsur","caminareste","caminaroeste","rules","viewupdate","start","a","this","loopstop","explorarentorno","objetivo","onClick","type","value","onChange","placeholder","length","display","gridTemplateColumns","gridAutoRows","arr","i","j","push","crearentorno","setState","ajuste","parseInt","elementsCoord","findIndex","colorearobstaculo","colorearmeta","estadoS1","estadoS2","estadoS3","estadoS4","estadoS5","estadoS6","estadoS7","estadoS8","e","target","updatepath","movimiento","modificacion","milliseconds","Promise","resolve","setTimeout","backmove","backlist","minus","at","recalcular","cleanAgente","colorearagente","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0aa4d179.chunk.js","sourcesContent":["\r\nconst Casillas =({tablero})=>{        \r\n    return(<>\r\n        {tablero.map?.((casilla)=>(            \r\n            <div key={casilla.id}> \r\n                <button href=\"#\" className=\"casilla\"\r\n                    style={{\r\n                        width:'50px',\r\n                        height:'50px',\r\n                        position: 'relative',\r\n                        backgroundColor:  casilla.isAgente === true ? 'green' : \r\n                                        casilla.meta     === true ? 'midnightblue' : \r\n                                        casilla.obs      === true ? 'red' : \r\n                                        casilla.visitado === true ? 'plum' : 'white' \r\n                    }}> {casilla.id+' x:'+casilla.x+', y:'+casilla.y}\r\n                </button>\r\n            </div>\r\n            ))\r\n        }\r\n    </>)\r\n    \r\n}\r\n\r\nexport default Casillas","\r\nconst Sensores =({s1,s2,s3,s4,s5,s6,s7,s8})=>{\r\n    return(\r\n        <>\r\n            <div style={{position:'fixed',top:'80%',right:'10%', width:'10px', height:'10px', \r\n                color: s1==='obst' ? 'red' : s1==='meta' ? 'green' : s1==='visi' ? 'pink': 'blue'}}\r\n            >s1</div>\r\n            \r\n            <div style={{position:'fixed',top:'80%',right:'7%', width:'10px', height:'10px', \r\n                color: s2==='obst' ? 'red' : s2==='meta' ? 'green' : s2==='visi' ? 'pink': 'blue'}}\r\n            >s2</div>\r\n            \r\n            <div style={{position:'fixed',top:'80%',right:'4%', width:'10px', height:'10px', \r\n                color: s3==='obst' ? 'red' : s3==='meta' ? 'green' : s3==='visi' ? 'pink': 'blue'}}\r\n            >s3</div>\r\n\r\n            <div style={{position:'fixed',top:'85%',right:'10%', width:'10px', height:'10px', \r\n                color: s8==='obst' ? 'red' : s8==='meta' ? 'green' : s8==='visi' ? 'pink': 'blue'}}\r\n            >s8</div>\r\n            \r\n            <div style={{position:'fixed',top:'85%',right:'4%',width:'10px', height:'10px', \r\n                color: s4==='obst' ? 'red' : s4==='meta' ? 'green' : s4==='visi' ? 'pink': 'blue'}}\r\n            >s4</div>\r\n\r\n            <div style={{position:'fixed',top:'90%',right:'10%', width:'10px', height:'10px', \r\n                color: s7==='obst' ? 'red' : s7==='meta' ? 'green' : s7==='visi' ? 'pink': 'blue'}}\r\n            >s7</div>\r\n\r\n            <div style={{position:'fixed',top:'90%',right:'7%', width:'10px', height:'10px', \r\n                color: s6==='obst' ? 'red' : s6==='meta' ? 'green' : s6==='visi' ? 'pink': 'blue'}}\r\n            >s6</div>\r\n            \r\n            <div style={{position:'fixed',top:'90%',right:'4%', width:'10px', height:'10px', \r\n                color: s5==='obst' ? 'red' : s5==='meta' ? 'green' : s5==='visi' ? 'pink': 'blue'}}\r\n            >s5</div> \r\n                        \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Sensores","export const evaluarS1 = ({agente_p,tablero}) =>{    \r\n    const ax = agente_p.x\r\n    const ay = agente_p.y\r\n            \r\n    let s1x = ax\r\n    let s1y = ay\r\n    s1x--\r\n    s1y++\r\n    \r\n    const casillaS1 = tablero.find(element => element.x===s1x && element.y===s1y)\r\n    var state = ''\r\n    if(casillaS1?.meta === true){\r\n        state = 'meta'\r\n        return state\r\n    }\r\n    if(casillaS1?.obs === true){\r\n        state = 'obst'\r\n        return state\r\n    }\r\n    if(casillaS1?.visitado === true){\r\n        state = 'visi'\r\n        return state\r\n    }\r\n    else{\r\n        state = 'vaci'\r\n        return state\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const evaluarS2 = ({agente_p,tablero}) =>{    \r\n    const ax = agente_p.x\r\n    const ay = agente_p.y\r\n            \r\n    let s1x = ax\r\n    let s1y = ay    \r\n    s1y++\r\n    \r\n    const casillaS2 = tablero.find(element => element.x===s1x && element.y===s1y)\r\n    var state = ''\r\n    if(casillaS2?.meta === true){\r\n        state = 'meta'\r\n        return state\r\n    }\r\n    if(casillaS2?.obs === true){\r\n        state = 'obst'\r\n        return state\r\n    }\r\n    if(casillaS2?.visitado === true){\r\n        state = 'visi'\r\n        return state\r\n    }\r\n    else{\r\n        state = 'vaci'\r\n        return state\r\n    }\r\n}\r\n\r\n\r\nexport const evaluarS3 = ({agente_p,tablero}) =>{    \r\n    const ax = agente_p.x\r\n    const ay = agente_p.y\r\n            \r\n    let s1x = ax\r\n    let s1y = ay    \r\n    s1x++\r\n    s1y++\r\n    \r\n    const casillaS3 = tablero.find(element => element.x===s1x && element.y===s1y)\r\n    var state = ''\r\n    if(casillaS3?.meta === true){\r\n        state = 'meta'\r\n        return state\r\n    }\r\n    if(casillaS3?.obs === true){\r\n        state = 'obst'\r\n        return state\r\n    }\r\n    if(casillaS3?.visitado === true){\r\n        state = 'visi'\r\n        return state\r\n    }\r\n    else{\r\n        state = 'vaci'\r\n        return state\r\n    }\r\n}\r\n\r\nexport const evaluarS4 = ({agente_p,tablero}) =>{    \r\n    const ax = agente_p.x\r\n    const ay = agente_p.y\r\n            \r\n    let s1x = ax\r\n    let s1y = ay    \r\n    s1x++    \r\n    \r\n    const casillaS4 = tablero.find(element => element.x===s1x && element.y===s1y)\r\n    var state = ''\r\n    if(casillaS4?.meta === true){\r\n        state = 'meta'\r\n        return state\r\n    }\r\n    if(casillaS4?.obs === true){\r\n        state = 'obst'\r\n        return state\r\n    }\r\n    if(casillaS4?.visitado === true){\r\n        state = 'visi'\r\n        return state\r\n    }\r\n    else{\r\n        state = 'vaci'\r\n        return state\r\n    }\r\n}\r\n\r\nexport const evaluarS5 = ({agente_p,tablero}) =>{    \r\n    const ax = agente_p.x\r\n    const ay = agente_p.y\r\n            \r\n    let s1x = ax\r\n    let s1y = ay    \r\n    s1x++\r\n    s1y--\r\n    \r\n    const casillaS5 = tablero.find(element => element.x===s1x && element.y===s1y)\r\n    var state = ''\r\n    if(casillaS5?.meta === true){\r\n        state = 'meta'\r\n        return state\r\n    }\r\n    if(casillaS5?.obs === true){\r\n        state = 'obst'\r\n        return state\r\n    }\r\n    if(casillaS5?.visitado === true){\r\n        state = 'visi'\r\n        return state\r\n    }\r\n    else{\r\n        state = 'vaci'\r\n        return state\r\n    }\r\n}\r\n\r\nexport const evaluarS6 = ({agente_p,tablero}) =>{    \r\n    const ax = agente_p.x\r\n    const ay = agente_p.y\r\n            \r\n    let s1x = ax\r\n    let s1y = ay        \r\n    s1y--\r\n    \r\n    const casillaS6 = tablero.find(element => element.x===s1x && element.y===s1y)\r\n    var state = ''\r\n    if(casillaS6?.meta === true){\r\n        state = 'meta'\r\n        return state\r\n    }\r\n    if(casillaS6?.obs === true){\r\n        state = 'obst'\r\n        return state\r\n    }\r\n    if(casillaS6?.visitado === true){\r\n        state = 'visi'\r\n        return state\r\n    }\r\n    else{\r\n        state = 'vaci'\r\n        return state\r\n    }\r\n}\r\n\r\nexport const evaluarS7 = ({agente_p,tablero}) =>{    \r\n    const ax = agente_p.x\r\n    const ay = agente_p.y\r\n            \r\n    let s1x = ax\r\n    let s1y = ay    \r\n    s1x--\r\n    s1y--\r\n\r\n    const casillaS7 = tablero.find(element => element.x===s1x && element.y===s1y)    \r\n    var state = ''\r\n    if(casillaS7?.meta === true){\r\n        state = 'meta'\r\n        return state\r\n    }\r\n    if(casillaS7?.obs === true){\r\n        state = 'obst'\r\n        return state\r\n    }\r\n    if(casillaS7?.visitado === true){\r\n        state = 'visi'\r\n        return state\r\n    }\r\n    else{\r\n        state = 'vaci'\r\n        return state\r\n    }\r\n}\r\n\r\nexport const evaluarS8 = ({agente_p,tablero}) =>{    \r\n    const ax = agente_p.x\r\n    const ay = agente_p.y\r\n            \r\n    let s1x = ax\r\n    let s1y = ay    \r\n    s1x--    \r\n    \r\n    const casillaS8 = tablero.find(element => element.x===s1x && element.y===s1y)\r\n    var state = ''\r\n    if(casillaS8?.meta === true){\r\n        state = 'meta'\r\n        return state\r\n    }\r\n    if(casillaS8?.obs === true){\r\n        state = 'obst'\r\n        return state\r\n    }\r\n    if(casillaS8?.visitado === true){\r\n        state = 'visi'\r\n        return state\r\n    }\r\n    else{\r\n        state = 'vaci'\r\n        return state\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Casillas from './Casillas'\r\nimport Sensores from './Sensores'\r\n\r\nimport './Styles.css'\r\nimport { evaluarS1, evaluarS2, evaluarS3, evaluarS4, evaluarS5, evaluarS6, evaluarS7, evaluarS8 } from '../logica/exploracion'\r\nimport { colorearagente, colorearmeta, colorearobstaculo, crearentorno } from '../logica/calculosentorno'\r\n\r\nexport default class Pantalla extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            //sensors\r\n            s1: '', s2: '', s3: '', s4: '', s5: '', s6: '', s7: '', s8: '',\r\n\r\n            tablero: [],  //Contains the enviroment\r\n            agente_p: { x: 1, y: 1 },//Position of the agent, by default at 1,1\r\n            obstac: '',  //dónde poner el obstáculo #de casilla \r\n            meta: '',    //State tas contains a cell ID, used to place \"meta\"\r\n\r\n            pathlist: [],//Contains the last places visited\r\n            stop: false, //Defines when the agent has to stop\r\n            index: -2,    //Needed to move through pathlist\r\n\r\n\r\n            rendimiento: 0\r\n        }\r\n        this.sleep = this.sleep.bind(this)\r\n\r\n        this.llenartablero = this.llenartablero.bind(this)\r\n\r\n        this.definirobs = this.definirobs.bind(this)\r\n        this.definirmeta = this.definirmeta.bind(this)\r\n\r\n\r\n        this.objetivocambio = this.objetivocambio.bind(this)\r\n        this.metacambio = this.metacambio.bind(this)\r\n\r\n        this.caminarnorte = this.caminarnorte.bind(this)\r\n        this.caminarsur = this.caminarsur.bind(this)\r\n        this.caminareste = this.caminareste.bind(this)\r\n        this.caminaroeste = this.caminaroeste.bind(this)\r\n\r\n        this.rules = this.rules.bind(this)\r\n        this.viewupdate = this.viewupdate.bind(this)\r\n\r\n        this.start = this.start.bind(this)\r\n\r\n    }\r\n\r\n\r\n    async start() {\r\n        const { stop } = this.state\r\n        let loopstop = stop        //INITIAL STATE\r\n\r\n        while (loopstop === false) {\r\n\r\n            //SENSORS GET INFORMATION AROUND THE AGENT\r\n            this.explorarentorno()\r\n\r\n            //After reading the enviroment, make decision\r\n            await this.sleep(100)\r\n            this.rules()\r\n\r\n\r\n            //UPDATES THE VIEW, VISUAL STUFF\r\n            await this.sleep(110)\r\n            this.viewupdate()\r\n\r\n            //VERIFY If the stop state has changed\r\n            const { stop } = this.state\r\n            loopstop = stop //UPDATES THE STOP STATE\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            tablero,\r\n            objetivo,\r\n            meta,\r\n            s1, s2, s3, s4, s5, s6, s7, s8,\r\n            rendimiento\r\n        } = this.state\r\n\r\n        return (\r\n            <>\r\n                <button\r\n                    onClick={this.llenartablero}\r\n                    style={{ position: 'fixed', top: '10%', right: '2%' }}\r\n                >llenar tablero</button>\r\n\r\n                <input type='number'\r\n                    style={{\r\n                        position: 'fixed',\r\n                        top: '17%', right: '2%'\r\n                    }}\r\n                    value={objetivo}\r\n                    onChange={this.objetivocambio}\r\n                    placeholder='insertar obstáculo # de casilla'\r\n                />\r\n\r\n                <button\r\n                    onClick={this.definirobs}\r\n                    style={{ position: 'fixed', top: '21%', right: '2%' }}\r\n                >colocar obs</button>\r\n\r\n                <input type='number'\r\n                    style={{\r\n                        position: 'fixed',\r\n                        top: '27%',\r\n                        right: '2%'\r\n                    }}\r\n                    value={meta}\r\n                    onChange={this.metacambio}\r\n                    placeholder='definir meta # casilla'\r\n                />\r\n\r\n                <button\r\n                    onClick={this.definirmeta}\r\n                    style={{ position: 'fixed', top: '31%', right: '2%' }}\r\n                >colocar meta</button>\r\n\r\n                <button\r\n                    onClick={this.start}\r\n                    style={{ position: 'fixed', top: '70%', right: '2%' }}\r\n                >ir a meta</button>\r\n\r\n                <div style={{ position: 'fixed', top: '75%', right: '2%' }}>Rendimiento: {rendimiento}</div>\r\n\r\n\r\n                {\r\n                    tablero.length > 0 &&\r\n                    //WE ADD THE VISUAL ELEMENTS WHEN THE ENVIROMENT HAS BEEN CREATED\r\n                    <>\r\n                        <div\r\n                            style={{\r\n                                width: '1000px',\r\n                                display: 'grid',\r\n                                gridTemplateColumns: 'repeat(20, 1fr)',\r\n                                gridAutoRows: '20',\r\n                            }}>\r\n\r\n                            <Casillas tablero={tablero} />\r\n\r\n                        </div>\r\n\r\n                        <Sensores\r\n                            s1={s1}\r\n                            s2={s2}\r\n                            s3={s3}\r\n                            s4={s4}\r\n                            s5={s5}\r\n                            s6={s6}\r\n                            s7={s7}\r\n                            s8={s8}\r\n                        />\r\n                    </>\r\n\r\n                }\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    llenartablero() {\r\n        const arr = crearentorno()\r\n        this.setState({ tablero: arr, stop: false, agente_p: { x: 1, y: 1 }, index: -2 });\r\n    }\r\n\r\n    definirobs() {\r\n        const { tablero, obstac } = this.state\r\n        const ajuste = colorearobstaculo({ tablero, obstac })\r\n        this.setState({ tablero: ajuste })\r\n    }\r\n\r\n    definirmeta() {\r\n        const { tablero, meta } = this.state\r\n        const ajuste = colorearmeta({ tablero, meta })\r\n        this.setState({ tablero: ajuste })\r\n    }\r\n\r\n\r\n    async explorarentorno() {\r\n        const { agente_p, tablero } = this.state\r\n\r\n        //Evaluar todas las casillas, para saber si hay obstáculo\r\n        const estadoS1 = evaluarS1({ agente_p, tablero })\r\n        const estadoS2 = evaluarS2({ agente_p, tablero })\r\n        const estadoS3 = evaluarS3({ agente_p, tablero })\r\n        const estadoS4 = evaluarS4({ agente_p, tablero })\r\n        const estadoS5 = evaluarS5({ agente_p, tablero })\r\n        const estadoS6 = evaluarS6({ agente_p, tablero })\r\n        const estadoS7 = evaluarS7({ agente_p, tablero })\r\n        const estadoS8 = evaluarS8({ agente_p, tablero })\r\n\r\n        this.setState({\r\n            s1: estadoS1,\r\n            s2: estadoS2,\r\n            s3: estadoS3,\r\n            s4: estadoS4,\r\n            s5: estadoS5,\r\n            s6: estadoS6,\r\n            s7: estadoS7,\r\n            s8: estadoS8\r\n        })\r\n\r\n    }\r\n\r\n    objetivocambio(e) {\r\n        const { value } = e.target\r\n        this.setState({ obstac: value })\r\n    }\r\n\r\n    metacambio(e) {\r\n        const { value } = e.target\r\n        this.setState({ meta: value, stop: false })\r\n    }\r\n\r\n    caminarnorte() {\r\n        const { agente_p, pathlist, rendimiento } = this.state\r\n        let updatepath = pathlist\r\n        let movimiento = agente_p\r\n        movimiento.y++\r\n        updatepath.push({ x: movimiento.x, y: movimiento.y })\r\n\r\n        let modificacion = rendimiento -1 \r\n        this.setState({ agente_p: movimiento, pathlist: updatepath, index: -2, rendimiento: modificacion })        \r\n    }\r\n\r\n    caminarsur() {\r\n        const { agente_p, pathlist, rendimiento } = this.state\r\n        let updatepath = pathlist\r\n        let movimiento = agente_p\r\n        movimiento.y--\r\n        updatepath.push({ x: movimiento.x, y: movimiento.y })\r\n\r\n        let modificacion = rendimiento -1 \r\n        this.setState({ agente_p: movimiento, pathlist: updatepath, index: -2, rendimiento: modificacion })        \r\n    }\r\n\r\n    caminareste() {\r\n        const { agente_p, pathlist, rendimiento } = this.state\r\n        let updatepath = pathlist\r\n        let movimiento = agente_p\r\n        movimiento.x++\r\n        updatepath.push({ x: movimiento.x, y: movimiento.y })\r\n\r\n        let modificacion = rendimiento - 1\r\n        this.setState({ agente_p: movimiento, pathlist: updatepath, index: -2, rendimiento: modificacion })        \r\n    }\r\n\r\n    caminaroeste() {\r\n        const { agente_p, pathlist, rendimiento } = this.state\r\n        let updatepath = pathlist\r\n        let movimiento = agente_p\r\n        movimiento.x--\r\n        updatepath.push({ x: movimiento.x, y: movimiento.y })\r\n\r\n        let modificacion = rendimiento - 1\r\n        this.setState({ agente_p: movimiento, pathlist: updatepath, index: -2, rendimiento: modificacion })        \r\n    }\r\n\r\n\r\n    sleep(milliseconds) {\r\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n    }\r\n\r\n\r\n\r\n    rules() {\r\n        const { s1, s2, s3, s4, s5, s6, s7, s8 } = this.state\r\n\r\n        let backmove = []\r\n        let backlist = []\r\n        let movimiento = []\r\n\r\n        //WHEN THE AGENT GETS TRAPED AROUND OBSTACLES, OR HAS ONLY VISITED PLACES AROUND\r\n        if ((s1 === 'visi' || s1 === 'obst') && (s2 === 'visi' || s2 === 'obst') && (s3 === 'visi' || s3 === 'obst') && (s4 === 'visi' || s4 === 'obst') && (s5 === 'visi' || s5 === 'obst') && (s6 === 'visi' || s6 === 'obst') && (s7 === 'visi' || s7 === 'obst') && (s8 === 'visi' || s8 === 'obst')) {\r\n            const { agente_p, pathlist, index, rendimiento } = this.state\r\n            let minus = index\r\n            movimiento = agente_p //COPY OF THE AGENT POSITION {x:n, y:n}            \r\n            backlist = pathlist //LISTA ENTERA DE PASOS ANTERIORES\r\n            backmove = pathlist.at(minus)  //X ITEM DE LA LISTA, anteriormente visitado\r\n\r\n            //We set the movement same as the selected object from pathlist\r\n            movimiento.x = backmove.x\r\n            movimiento.y = backmove.y\r\n\r\n            backlist.push(agente_p)\r\n            //WE DECREMENT THE VALUE -2 BECAUSE OF OFFSET REASONS\r\n            /*No decrementar el index resultaría en el agente moviéndose a\r\n              a la casilla en la última posición del pathlist cada vez que \r\n              esta regla sea verdadera*/\r\n            minus = minus - 2\r\n\r\n            let modificacion = rendimiento - 5\r\n            this.setState({ agente_p: movimiento, index: minus, pathlist: backlist, rendimiento: modificacion })\r\n        }\r\n\r\n\r\n        /////////////////IF \"META\" IS NEARBY, MOVES TO THE PLACE IT IS///////////////////////////////////////////////////\r\n        //IF IT IS AT NORTH\r\n        if (s2 === 'meta') {\r\n            const { rendimiento } = this.state\r\n            this.caminarnorte()\r\n            let modificacion = rendimiento + 1000\r\n            this.setState({ stop: true, rendimiento: modificacion })\r\n            return\r\n        }\r\n        //IF IT IS AT EAST\r\n        if (s4 === 'meta') {\r\n            const { rendimiento } = this.state\r\n            this.caminareste()\r\n            let modificacion = rendimiento + 1000\r\n            this.setState({ stop: true, rendimiento: modificacion })\r\n            return\r\n        }\r\n        //IF IT IS AT SOUTH\r\n        if (s6 === 'meta') {\r\n            const { rendimiento } = this.state\r\n            this.caminarsur()\r\n            let modificacion = rendimiento + 1000\r\n            this.setState({ stop: true, rendimiento: modificacion })\r\n            return\r\n        }\r\n        //IF IT IS AT WEST\r\n        if (s8 === 'meta') {\r\n            const { rendimiento } = this.state\r\n            this.caminaroeste()\r\n            let modificacion = rendimiento + 1000\r\n            this.setState({ stop: true, rendimiento: modificacion })\r\n            return\r\n        }\r\n\r\n        ////////////////////////META NEARBY, AT CORNERS//////////////////////////////////////////////////////////////\r\n        //IF NW AND N IS CLEAR\r\n        if (s1 === 'meta' && s2 === 'vaci') {\r\n            this.caminarnorte()\r\n            return\r\n        }\r\n        //IF NW AND W IS CLEAR (AND N WASN'T)\r\n        if (s1 === 'meta' && s8 === 'vaci') {\r\n            this.caminaroeste()\r\n            return\r\n        }\r\n        //IF NE AND N IS CLEAR\r\n        if (s3 === 'meta' && s2 === 'vaci') {\r\n            this.caminarnorte()\r\n            return\r\n        }\r\n        //IF NE AND E IS CLEAR (AND N WASN'T)\r\n        if (s3 === 'meta' && s4 === 'vaci') {\r\n            this.caminareste()\r\n            return\r\n        }\r\n        //IF SE AND E IS CLEAR\r\n        if (s5 === 'meta' && s4 === 'vaci') {\r\n            this.caminareste()\r\n            return\r\n        }\r\n        //IF SE AND S IS CLEAR (AND E WASN'T)\r\n        if (s5 === 'meta' && s6 === 'vaci') {\r\n            this.caminarsur()\r\n            return\r\n        }\r\n        //IF SW AND W IS CLEAR\r\n        if (s7 === 'meta' && s8 === 'vaci') {\r\n            this.caminaroeste()\r\n            return\r\n        }\r\n        //IF SW AND S IS CLEAR (AND W WASN'T)\r\n        if (s7 === 'meta' && s6 === 'vaci') {\r\n            this.caminaroeste()\r\n            return\r\n        }\r\n\r\n\r\n\r\n        //////////////////////////////DEFAULT MOVEMENTS, 4 WAYS, MOVE IF CLEAR (\"vaci\")//////////////////////////////////\r\n        if (s2 === 'vaci') {\r\n            this.caminarnorte()\r\n            return\r\n        }\r\n        if (s6 === 'vaci') {\r\n            this.caminarsur()\r\n            return\r\n        }\r\n        if (s8 === 'vaci') {\r\n            this.caminaroeste()\r\n            return\r\n        }\r\n        if (s4 === 'vaci') {\r\n            this.caminareste()\r\n            return\r\n        }\r\n\r\n\r\n\r\n        ////////////////////////////////////////////PATHS AT THE CORNERS///////////////////////////////////////////////\r\n        //WHEN S1 IS CLEAR TO WALK/////////////////////////\r\n        if (s1 === 'vaci' && s2 !== 'obst') {\r\n            this.caminarnorte()\r\n            return\r\n        }\r\n        //ONLY IF N WASN'T CLEAR\r\n        if (s1 === 'vaci' && s8 !== 'obst') {\r\n            this.caminaroeste()\r\n            return\r\n        }\r\n\r\n        //WHEN S3 IS CLEAR TO WALK/////////////////////////\r\n        if (s3 === 'vaci' && s2 !== 'obst') {\r\n            this.caminarnorte()\r\n            return\r\n        }\r\n        //ONLY IF N WASN'T CLEAR\r\n        if (s3 === 'vaci' && s4 !== 'obst') {\r\n            this.caminareste()\r\n            return\r\n        }\r\n\r\n        //WHEN S5 IS CLEAR TO WALK/////////////////////////\r\n        if (s5 === 'vaci' && s4 !== 'obst') {\r\n            this.caminareste()\r\n            return\r\n        }\r\n        //ONLY IF N WASN'T CLEAR\r\n        if (s5 === 'vaci' && s6 !== 'obst') {\r\n            this.caminarsur()\r\n            return\r\n        }\r\n\r\n        //WHEN S7 IS CLEAR TO WALK/////////////////////////\r\n        if (s7 === 'vaci' && s8 !== 'obst') {\r\n            this.caminaroeste()\r\n            return\r\n        }\r\n        //ONLY IF N WASN'T CLEAR\r\n        if (s7 === 'vaci' && s6 !== 'obst') {\r\n            this.caminarsur()\r\n            return\r\n        }\r\n\r\n    }\r\n\r\n    viewupdate() {\r\n        //WE EXTRACT THE ACTUAL POSITION OF THE AGENT, AND THE ENVIROMENT\r\n        const { agente_p, tablero } = this.state\r\n        //RECALCULAR CASILLAS VISITADAS Y COLOREAR POS ACTUAL DEL AGENTE\r\n        const recalcular = colorearagente({ agente_p, tablero }) //Updates the enviroment string\r\n        //UPDATE ENVIROMENT\r\n        this.setState({ tablero: recalcular }) //Sets the enviroment string into the new state\r\n\r\n    }\r\n\r\n}","\r\n//FILL ARRAY THAT REPRESENTS TH ENVIROMENT INCLUDES THE DEFAULT OBSTACLES ON 0X 0Y AND MAX X Y\r\nexport const crearentorno = () => {\r\n    //BY DEFAULT AND RULES, OUR AGENT IS IN 1,1\r\n    const x = 1\r\n    const y = 1\r\n\r\n    //WE INITIALIZE THE ARRAY FOR OUR OBJECTS(400 objects)\r\n    let arr = [];\r\n    var id = 400;\r\n    for(let i=19;i>=0;i--){\r\n        //Needed to fill ids in the desired order, from right to left, up to down\r\n        id=id-20;\r\n        for(let j=0;j<20;j++){\r\n            //SETS THE AGENT IN 1,1 by default\r\n            if(j === x && i === y){\r\n                arr.push({'id':id,'x':j,'y':i,'obs':false,'meta':false,'visitado':false,'isAgente': true});\r\n                id++;\r\n            }\r\n            //TO ALL X0 && Y0, X19 && Y19, set to obstacle, to create default walls\r\n            else if(j === 0 || i === 0 || j ===19 || i === 19){\r\n                arr.push({'id':id,'x':j,'y':i,'obs':true,'meta':false,'visitado':false,'isAgente': false});\r\n                id++;\r\n            }\r\n            //FOR EVERY ELSE OBJECT IN THE ARRAY WE SET ALL THE STATES ON FALSE\r\n            else{\r\n                arr.push({'id':id,'x':j,'y':i,'obs':false,'meta':false,'visitado':false,'isAgente': false});\r\n                id++;\r\n            }            \r\n        }\r\n        id=id-20;            \r\n    }    \r\n    return(arr)\r\n}\r\n\r\n\r\n\r\n//TAKES THE POSITION OF THE AGENT AND PRINTS IT INSIDE THE ENVIROMENT ARRAY\r\nexport const colorearagente = ({agente_p,tablero}) => {\r\n    //EXTRACT THE X AND Y COORDS\r\n    let ax = agente_p.x\r\n    let ay = agente_p.y\r\n\r\n    //WE START WORKING WITH THE OBJECTS ARRAY\r\n    let cleanAgente = []\r\n    cleanAgente = tablero\r\n    //WE NEED TO WALK OVER ALL THE OBJECTS TO AVOID DUPLICATE REPRESENTATIONS \r\n    //OF THE AGENT\r\n    for(let i=0; i<=399; i++){\r\n        if(cleanAgente[i].isAgente === true){\r\n            cleanAgente[i].isAgente = false\r\n            cleanAgente[i].visitado = true\r\n        }\r\n        else if(cleanAgente[i].x === ax && cleanAgente[i].y === ay){\r\n            cleanAgente[i].isAgente = true\r\n        }\r\n    }\r\n    const updatedTable = cleanAgente\r\n    \r\n    return(updatedTable)\r\n}\r\n\r\n//USED TO SET THE PLACE WHERE THE GOAL IS\r\nexport const colorearmeta = ({tablero, meta}) =>{\r\n    //EXTRACT THE DATA FROM THE INPUT, CONTAINS AN ID\r\n    const casilla = parseInt(meta)\r\n\r\n    //WE START WORKING WITH THE ARRAY OF OBJECTS\r\n    let ajuste = []\r\n    ajuste = tablero\r\n\r\n    //WE WALK OVER ALL THE ARRAY TO FIND A MATCH IN THE ID\r\n    for(let i=0; i<=399; i++){\r\n        if(ajuste[i].id===casilla){\r\n            ajuste[i].meta = true            \r\n        }\r\n        //TO DELETE ANY OTHER DEFINITION OF THE \"meta\"\r\n        //AVOID DUPLICATED GOALS\r\n        else{\r\n            ajuste[i].meta = false\r\n        }\r\n    }\r\n    return(ajuste)\r\n}\r\n\r\n\r\n\r\n\r\n//INSERTS AN OBSTACLE\r\nexport const colorearobstaculo = ({tablero, obstac}) =>{\r\n    //EXTRACT THE DATA FROM THE INPUT, CONTAINS AN ID\r\n    const casilla = parseInt(obstac)        \r\n    //WE USE THE FINDINDEX FUNCTION TO FIND THE DESIRED OBJECT\r\n    const elementsCoord = tablero.findIndex(element => element.id === casilla)\r\n    //WE MAKE A COPY OF THE ENVIROMENT\r\n    let ajuste = [...tablero]\r\n    //UPDATE THE ELEMENT FINDED\r\n    ajuste[elementsCoord] = {...ajuste[elementsCoord], obs: true}\r\n    return(ajuste)\r\n}\r\n\r\n\r\n","import Pantalla from \"./vista/Pantalla\";\n\nfunction App() {\n  return (\n    <Pantalla />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}